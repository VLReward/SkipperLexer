//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Rolis\Documents\GitHub\SkipperLexer\Skipper\Penguinese.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Skipper {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PenguineseLexer : Lexer {
	public const int
		NUMERAL=1, OPERATORMD=2, OPERATORPM=3, OPERATOR=4, PLUS=5, COND=6, SepCOND=7, 
		TERM=8, COM=9, OP=10, CP=11, OBR=12, CBR=13, OCB=14, CCB=15, DEC=16, EQUALS=17, 
		COL=18, TRUE=19, FALSE=20, IF=21, THEN=22, WHILE=23, FOR=24, FUNC=25, 
		MAIN=26, DOUBLE=27, CHARACTER=28, TEXT=29, NUMBER=30, ARRAYOF=31, BOOLEAN=32, 
		HALT=33, RETURN=34, READ=35, WRITE=36, LETTER=37, CHAR=38, WORD=39, STRING=40, 
		WHITESPACE=41;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "NUMERAL", "OPERATORMD", "OPERATORPM", "OPERATOR", 
		"PLUS", "COND", "SepCOND", "TERM", "COM", "OP", "CP", "OBR", "CBR", "OCB", 
		"CCB", "DEC", "EQUALS", "COL", "TRUE", "FALSE", "IF", "THEN", "WHILE", 
		"FOR", "FUNC", "MAIN", "DOUBLE", "CHARACTER", "TEXT", "NUMBER", "ARRAYOF", 
		"BOOLEAN", "HALT", "RETURN", "READ", "WRITE", "LETTER", "CHAR", "WORD", 
		"STRING", "WHITESPACE"
	};


	public PenguineseLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'+'", null, null, "';'", "','", "'('", 
		"')'", "'['", "']'", "'{'", "'}'", "'.'", "'='", "':'", "'true'", "'false'", 
		"'if'", "'then'", "'while'", "'for'", "'func'", "'main'", "'double'", 
		"'character'", "'text'", "'number'", "'arrayof'", "'boolean'", "'NOOT NOOT'", 
		"'regresar'", "'imprimirVar'", "'escribirVar'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NUMERAL", "OPERATORMD", "OPERATORPM", "OPERATOR", "PLUS", "COND", 
		"SepCOND", "TERM", "COM", "OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", 
		"EQUALS", "COL", "TRUE", "FALSE", "IF", "THEN", "WHILE", "FOR", "FUNC", 
		"MAIN", "DOUBLE", "CHARACTER", "TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", 
		"HALT", "RETURN", "READ", "WRITE", "LETTER", "CHAR", "WORD", "STRING", 
		"WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Penguinese.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2+\x135\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x6\x4_\n\x4\r\x4\xE\x4`"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\t\x3\t\x3\t\x3\t\x5\tt\n\t\x3\n\x3\n\x3\n\x3\n\x5\nz\n\n\x3\v\x3\v"+
		"\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3"+
		"!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#\x3#\x3#"+
		"\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3%\x3%\x3%\x3"+
		"%\x3%\x3%\x3%\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3&\x3\'\x3"+
		"\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x5(\x113"+
		"\n(\x3)\x3)\x3)\x3)\x3*\x3*\x3*\a*\x11C\n*\f*\xE*\x11F\v*\x3+\x3+\a+\x123"+
		"\n+\f+\xE+\x126\v+\x3+\x3+\x3,\x3,\x5,\x12C\n,\x3,\x3,\x6,\x130\n,\r,"+
		"\xE,\x131\x3,\x3,\x3\x124\x2\x2-\x3\x2\x2\x5\x2\x2\a\x2\x3\t\x2\x4\v\x2"+
		"\x5\r\x2\x6\xF\x2\a\x11\x2\b\x13\x2\t\x15\x2\n\x17\x2\v\x19\x2\f\x1B\x2"+
		"\r\x1D\x2\xE\x1F\x2\xF!\x2\x10#\x2\x11%\x2\x12\'\x2\x13)\x2\x14+\x2\x15"+
		"-\x2\x16/\x2\x17\x31\x2\x18\x33\x2\x19\x35\x2\x1A\x37\x2\x1B\x39\x2\x1C"+
		";\x2\x1D=\x2\x1E?\x2\x1F\x41\x2 \x43\x2!\x45\x2\"G\x2#I\x2$K\x2%M\x2&"+
		"O\x2\'Q\x2(S\x2)U\x2*W\x2+\x3\x2\n\x3\x2\x63|\x3\x2\x43\\\x3\x2\x32;\x4"+
		"\x2,,\x31\x31\x4\x2--//\x5\x2,-//\x31\x31\x4\x2>>@@\x4\x2\v\v\"\"\x141"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3"+
		"\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2"+
		"\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2"+
		"\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2"+
		"\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2"+
		"\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2"+
		"\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3"+
		"\x2\x2\x2\x3Y\x3\x2\x2\x2\x5[\x3\x2\x2\x2\a^\x3\x2\x2\x2\t\x62\x3\x2\x2"+
		"\x2\v\x64\x3\x2\x2\x2\r\x66\x3\x2\x2\x2\xFh\x3\x2\x2\x2\x11s\x3\x2\x2"+
		"\x2\x13y\x3\x2\x2\x2\x15{\x3\x2\x2\x2\x17}\x3\x2\x2\x2\x19\x7F\x3\x2\x2"+
		"\x2\x1B\x81\x3\x2\x2\x2\x1D\x83\x3\x2\x2\x2\x1F\x85\x3\x2\x2\x2!\x87\x3"+
		"\x2\x2\x2#\x89\x3\x2\x2\x2%\x8B\x3\x2\x2\x2\'\x8D\x3\x2\x2\x2)\x8F\x3"+
		"\x2\x2\x2+\x91\x3\x2\x2\x2-\x96\x3\x2\x2\x2/\x9C\x3\x2\x2\x2\x31\x9F\x3"+
		"\x2\x2\x2\x33\xA4\x3\x2\x2\x2\x35\xAA\x3\x2\x2\x2\x37\xAE\x3\x2\x2\x2"+
		"\x39\xB3\x3\x2\x2\x2;\xB8\x3\x2\x2\x2=\xBF\x3\x2\x2\x2?\xC9\x3\x2\x2\x2"+
		"\x41\xCE\x3\x2\x2\x2\x43\xD5\x3\x2\x2\x2\x45\xDD\x3\x2\x2\x2G\xE5\x3\x2"+
		"\x2\x2I\xEF\x3\x2\x2\x2K\xF8\x3\x2\x2\x2M\x104\x3\x2\x2\x2O\x112\x3\x2"+
		"\x2\x2Q\x114\x3\x2\x2\x2S\x11D\x3\x2\x2\x2U\x120\x3\x2\x2\x2W\x12F\x3"+
		"\x2\x2\x2YZ\t\x2\x2\x2Z\x4\x3\x2\x2\x2[\\\t\x3\x2\x2\\\x6\x3\x2\x2\x2"+
		"]_\t\x4\x2\x2^]\x3\x2\x2\x2_`\x3\x2\x2\x2`^\x3\x2\x2\x2`\x61\x3\x2\x2"+
		"\x2\x61\b\x3\x2\x2\x2\x62\x63\t\x5\x2\x2\x63\n\x3\x2\x2\x2\x64\x65\t\x6"+
		"\x2\x2\x65\f\x3\x2\x2\x2\x66g\t\a\x2\x2g\xE\x3\x2\x2\x2hi\a-\x2\x2i\x10"+
		"\x3\x2\x2\x2jk\a@\x2\x2kt\a?\x2\x2lm\a?\x2\x2mt\a?\x2\x2no\a>\x2\x2ot"+
		"\a?\x2\x2pt\t\b\x2\x2qr\a#\x2\x2rt\a?\x2\x2sj\x3\x2\x2\x2sl\x3\x2\x2\x2"+
		"sn\x3\x2\x2\x2sp\x3\x2\x2\x2sq\x3\x2\x2\x2t\x12\x3\x2\x2\x2uv\a(\x2\x2"+
		"vz\a(\x2\x2wx\a~\x2\x2xz\a~\x2\x2yu\x3\x2\x2\x2yw\x3\x2\x2\x2z\x14\x3"+
		"\x2\x2\x2{|\a=\x2\x2|\x16\x3\x2\x2\x2}~\a.\x2\x2~\x18\x3\x2\x2\x2\x7F"+
		"\x80\a*\x2\x2\x80\x1A\x3\x2\x2\x2\x81\x82\a+\x2\x2\x82\x1C\x3\x2\x2\x2"+
		"\x83\x84\a]\x2\x2\x84\x1E\x3\x2\x2\x2\x85\x86\a_\x2\x2\x86 \x3\x2\x2\x2"+
		"\x87\x88\a}\x2\x2\x88\"\x3\x2\x2\x2\x89\x8A\a\x7F\x2\x2\x8A$\x3\x2\x2"+
		"\x2\x8B\x8C\a\x30\x2\x2\x8C&\x3\x2\x2\x2\x8D\x8E\a?\x2\x2\x8E(\x3\x2\x2"+
		"\x2\x8F\x90\a<\x2\x2\x90*\x3\x2\x2\x2\x91\x92\av\x2\x2\x92\x93\at\x2\x2"+
		"\x93\x94\aw\x2\x2\x94\x95\ag\x2\x2\x95,\x3\x2\x2\x2\x96\x97\ah\x2\x2\x97"+
		"\x98\a\x63\x2\x2\x98\x99\an\x2\x2\x99\x9A\au\x2\x2\x9A\x9B\ag\x2\x2\x9B"+
		".\x3\x2\x2\x2\x9C\x9D\ak\x2\x2\x9D\x9E\ah\x2\x2\x9E\x30\x3\x2\x2\x2\x9F"+
		"\xA0\av\x2\x2\xA0\xA1\aj\x2\x2\xA1\xA2\ag\x2\x2\xA2\xA3\ap\x2\x2\xA3\x32"+
		"\x3\x2\x2\x2\xA4\xA5\ay\x2\x2\xA5\xA6\aj\x2\x2\xA6\xA7\ak\x2\x2\xA7\xA8"+
		"\an\x2\x2\xA8\xA9\ag\x2\x2\xA9\x34\x3\x2\x2\x2\xAA\xAB\ah\x2\x2\xAB\xAC"+
		"\aq\x2\x2\xAC\xAD\at\x2\x2\xAD\x36\x3\x2\x2\x2\xAE\xAF\ah\x2\x2\xAF\xB0"+
		"\aw\x2\x2\xB0\xB1\ap\x2\x2\xB1\xB2\a\x65\x2\x2\xB2\x38\x3\x2\x2\x2\xB3"+
		"\xB4\ao\x2\x2\xB4\xB5\a\x63\x2\x2\xB5\xB6\ak\x2\x2\xB6\xB7\ap\x2\x2\xB7"+
		":\x3\x2\x2\x2\xB8\xB9\a\x66\x2\x2\xB9\xBA\aq\x2\x2\xBA\xBB\aw\x2\x2\xBB"+
		"\xBC\a\x64\x2\x2\xBC\xBD\an\x2\x2\xBD\xBE\ag\x2\x2\xBE<\x3\x2\x2\x2\xBF"+
		"\xC0\a\x65\x2\x2\xC0\xC1\aj\x2\x2\xC1\xC2\a\x63\x2\x2\xC2\xC3\at\x2\x2"+
		"\xC3\xC4\a\x63\x2\x2\xC4\xC5\a\x65\x2\x2\xC5\xC6\av\x2\x2\xC6\xC7\ag\x2"+
		"\x2\xC7\xC8\at\x2\x2\xC8>\x3\x2\x2\x2\xC9\xCA\av\x2\x2\xCA\xCB\ag\x2\x2"+
		"\xCB\xCC\az\x2\x2\xCC\xCD\av\x2\x2\xCD@\x3\x2\x2\x2\xCE\xCF\ap\x2\x2\xCF"+
		"\xD0\aw\x2\x2\xD0\xD1\ao\x2\x2\xD1\xD2\a\x64\x2\x2\xD2\xD3\ag\x2\x2\xD3"+
		"\xD4\at\x2\x2\xD4\x42\x3\x2\x2\x2\xD5\xD6\a\x63\x2\x2\xD6\xD7\at\x2\x2"+
		"\xD7\xD8\at\x2\x2\xD8\xD9\a\x63\x2\x2\xD9\xDA\a{\x2\x2\xDA\xDB\aq\x2\x2"+
		"\xDB\xDC\ah\x2\x2\xDC\x44\x3\x2\x2\x2\xDD\xDE\a\x64\x2\x2\xDE\xDF\aq\x2"+
		"\x2\xDF\xE0\aq\x2\x2\xE0\xE1\an\x2\x2\xE1\xE2\ag\x2\x2\xE2\xE3\a\x63\x2"+
		"\x2\xE3\xE4\ap\x2\x2\xE4\x46\x3\x2\x2\x2\xE5\xE6\aP\x2\x2\xE6\xE7\aQ\x2"+
		"\x2\xE7\xE8\aQ\x2\x2\xE8\xE9\aV\x2\x2\xE9\xEA\a\"\x2\x2\xEA\xEB\aP\x2"+
		"\x2\xEB\xEC\aQ\x2\x2\xEC\xED\aQ\x2\x2\xED\xEE\aV\x2\x2\xEEH\x3\x2\x2\x2"+
		"\xEF\xF0\at\x2\x2\xF0\xF1\ag\x2\x2\xF1\xF2\ai\x2\x2\xF2\xF3\at\x2\x2\xF3"+
		"\xF4\ag\x2\x2\xF4\xF5\au\x2\x2\xF5\xF6\a\x63\x2\x2\xF6\xF7\at\x2\x2\xF7"+
		"J\x3\x2\x2\x2\xF8\xF9\ak\x2\x2\xF9\xFA\ao\x2\x2\xFA\xFB\ar\x2\x2\xFB\xFC"+
		"\at\x2\x2\xFC\xFD\ak\x2\x2\xFD\xFE\ao\x2\x2\xFE\xFF\ak\x2\x2\xFF\x100"+
		"\at\x2\x2\x100\x101\aX\x2\x2\x101\x102\a\x63\x2\x2\x102\x103\at\x2\x2"+
		"\x103L\x3\x2\x2\x2\x104\x105\ag\x2\x2\x105\x106\au\x2\x2\x106\x107\a\x65"+
		"\x2\x2\x107\x108\at\x2\x2\x108\x109\ak\x2\x2\x109\x10A\a\x64\x2\x2\x10A"+
		"\x10B\ak\x2\x2\x10B\x10C\at\x2\x2\x10C\x10D\aX\x2\x2\x10D\x10E\a\x63\x2"+
		"\x2\x10E\x10F\at\x2\x2\x10FN\x3\x2\x2\x2\x110\x113\x5\x3\x2\x2\x111\x113"+
		"\x5\x5\x3\x2\x112\x110\x3\x2\x2\x2\x112\x111\x3\x2\x2\x2\x113P\x3\x2\x2"+
		"\x2\x114\x115\a$\x2\x2\x115\x116\x5O(\x2\x116\x117\a$\x2\x2\x117R\x3\x2"+
		"\x2\x2\x118\x11C\x5\x3\x2\x2\x119\x11C\x5\x5\x3\x2\x11A\x11C\x5\a\x4\x2"+
		"\x11B\x118\x3\x2\x2\x2\x11B\x119\x3\x2\x2\x2\x11B\x11A\x3\x2\x2\x2\x11C"+
		"\x11F\x3\x2\x2\x2\x11D\x11B\x3\x2\x2\x2\x11D\x11E\x3\x2\x2\x2\x11ET\x3"+
		"\x2\x2\x2\x11F\x11D\x3\x2\x2\x2\x120\x124\a$\x2\x2\x121\x123\v\x2\x2\x2"+
		"\x122\x121\x3\x2\x2\x2\x123\x126\x3\x2\x2\x2\x124\x125\x3\x2\x2\x2\x124"+
		"\x122\x3\x2\x2\x2\x125\x127\x3\x2\x2\x2\x126\x124\x3\x2\x2\x2\x127\x128"+
		"\a$\x2\x2\x128V\x3\x2\x2\x2\x129\x130\t\t\x2\x2\x12A\x12C\a\xF\x2\x2\x12B"+
		"\x12A\x3\x2\x2\x2\x12B\x12C\x3\x2\x2\x2\x12C\x12D\x3\x2\x2\x2\x12D\x130"+
		"\a\f\x2\x2\x12E\x130\a\xF\x2\x2\x12F\x129\x3\x2\x2\x2\x12F\x12B\x3\x2"+
		"\x2\x2\x12F\x12E\x3\x2\x2\x2\x130\x131\x3\x2\x2\x2\x131\x12F\x3\x2\x2"+
		"\x2\x131\x132\x3\x2\x2\x2\x132\x133\x3\x2\x2\x2\x133\x134\b,\x2\x2\x134"+
		"X\x3\x2\x2\x2\r\x2`sy\x112\x11B\x11D\x124\x12B\x12F\x131\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Skipper
