//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Rolis\Documents\GitHub\SkipperLexer\Skipper\Penguinese.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Skipper {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PenguineseLexer : Lexer {
	public const int
		NUMERAL=1, OPERATOR=2, PLUS=3, COND=4, SepCOND=5, TERM=6, COM=7, OP=8, 
		CP=9, OBR=10, CBR=11, OCB=12, CCB=13, DEC=14, EQUALS=15, COL=16, TRUE=17, 
		FALSE=18, IF=19, THEN=20, WHILE=21, FOR=22, FUNC=23, MAIN=24, DOUBLE=25, 
		CHARACTER=26, TEXT=27, NUMBER=28, ARRAYOF=29, BOOLEAN=30, HALT=31, RETURN=32, 
		READ=33, WRITE=34, LETTER=35, CHAR=36, WORD=37, STRING=38, WHITESPACE=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", 
		"TERM", "COM", "OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", 
		"COL", "TRUE", "FALSE", "IF", "THEN", "WHILE", "FOR", "FUNC", "MAIN", 
		"DOUBLE", "CHARACTER", "TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", "HALT", 
		"RETURN", "READ", "WRITE", "LETTER", "CHAR", "WORD", "STRING", "WHITESPACE"
	};


	public PenguineseLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'+'", null, null, "';'", "','", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "'.'", "'='", "':'", "'true'", "'false'", "'if'", 
		"'then'", "'while'", "'for'", "'func'", "'main'", "'double'", "'character'", 
		"'text'", "'number'", "'arrayof'", "'boolean'", "'NOOT NOOT'", "'regresar'", 
		"'imprimirVar'", "'escribirVar'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", "TERM", "COM", 
		"OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", "COL", "TRUE", 
		"FALSE", "IF", "THEN", "WHILE", "FOR", "FUNC", "MAIN", "DOUBLE", "CHARACTER", 
		"TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", "HALT", "RETURN", "READ", "WRITE", 
		"LETTER", "CHAR", "WORD", "STRING", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Penguinese.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x130\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x6\x4[\n\x4\r\x4\xE\x4\\\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x5\ao\n\a\x3\b\x3\b\x3\b\x3\b\x5\bu\n\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v"+
		"\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19"+
		"\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3"+
		"!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3"+
		"#\x3#\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$"+
		"\x3$\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3&\x3&\x5&\x10E"+
		"\n&\x3\'\x3\'\x3\'\x3\'\x3(\x3(\x3(\a(\x117\n(\f(\xE(\x11A\v(\x3)\x3)"+
		"\a)\x11E\n)\f)\xE)\x121\v)\x3)\x3)\x3*\x3*\x5*\x127\n*\x3*\x3*\x6*\x12B"+
		"\n*\r*\xE*\x12C\x3*\x3*\x3\x11F\x2\x2+\x3\x2\x2\x5\x2\x2\a\x2\x3\t\x2"+
		"\x4\v\x2\x5\r\x2\x6\xF\x2\a\x11\x2\b\x13\x2\t\x15\x2\n\x17\x2\v\x19\x2"+
		"\f\x1B\x2\r\x1D\x2\xE\x1F\x2\xF!\x2\x10#\x2\x11%\x2\x12\'\x2\x13)\x2\x14"+
		"+\x2\x15-\x2\x16/\x2\x17\x31\x2\x18\x33\x2\x19\x35\x2\x1A\x37\x2\x1B\x39"+
		"\x2\x1C;\x2\x1D=\x2\x1E?\x2\x1F\x41\x2 \x43\x2!\x45\x2\"G\x2#I\x2$K\x2"+
		"%M\x2&O\x2\'Q\x2(S\x2)\x3\x2\a\x3\x2\x63|\x3\x2\x43\\\x3\x2\x32;\x5\x2"+
		",-//\x31\x31\x4\x2\v\v\"\"\x13E\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v"+
		"\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2"+
		"\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2"+
		"\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2"+
		"\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3"+
		"\x2\x2\x2\x3U\x3\x2\x2\x2\x5W\x3\x2\x2\x2\aZ\x3\x2\x2\x2\t^\x3\x2\x2\x2"+
		"\v`\x3\x2\x2\x2\rn\x3\x2\x2\x2\xFt\x3\x2\x2\x2\x11v\x3\x2\x2\x2\x13x\x3"+
		"\x2\x2\x2\x15z\x3\x2\x2\x2\x17|\x3\x2\x2\x2\x19~\x3\x2\x2\x2\x1B\x80\x3"+
		"\x2\x2\x2\x1D\x82\x3\x2\x2\x2\x1F\x84\x3\x2\x2\x2!\x86\x3\x2\x2\x2#\x88"+
		"\x3\x2\x2\x2%\x8A\x3\x2\x2\x2\'\x8C\x3\x2\x2\x2)\x91\x3\x2\x2\x2+\x97"+
		"\x3\x2\x2\x2-\x9A\x3\x2\x2\x2/\x9F\x3\x2\x2\x2\x31\xA5\x3\x2\x2\x2\x33"+
		"\xA9\x3\x2\x2\x2\x35\xAE\x3\x2\x2\x2\x37\xB3\x3\x2\x2\x2\x39\xBA\x3\x2"+
		"\x2\x2;\xC4\x3\x2\x2\x2=\xC9\x3\x2\x2\x2?\xD0\x3\x2\x2\x2\x41\xD8\x3\x2"+
		"\x2\x2\x43\xE0\x3\x2\x2\x2\x45\xEA\x3\x2\x2\x2G\xF3\x3\x2\x2\x2I\xFF\x3"+
		"\x2\x2\x2K\x10D\x3\x2\x2\x2M\x10F\x3\x2\x2\x2O\x118\x3\x2\x2\x2Q\x11B"+
		"\x3\x2\x2\x2S\x12A\x3\x2\x2\x2UV\t\x2\x2\x2V\x4\x3\x2\x2\x2WX\t\x3\x2"+
		"\x2X\x6\x3\x2\x2\x2Y[\t\x4\x2\x2ZY\x3\x2\x2\x2[\\\x3\x2\x2\x2\\Z\x3\x2"+
		"\x2\x2\\]\x3\x2\x2\x2]\b\x3\x2\x2\x2^_\t\x5\x2\x2_\n\x3\x2\x2\x2`\x61"+
		"\a-\x2\x2\x61\f\x3\x2\x2\x2\x62\x63\a?\x2\x2\x63o\a@\x2\x2\x64\x65\a?"+
		"\x2\x2\x65o\a?\x2\x2\x66g\a>\x2\x2go\a?\x2\x2ho\a>\x2\x2ij\a@\x2\x2jo"+
		"\a?\x2\x2ko\a@\x2\x2lm\a#\x2\x2mo\a?\x2\x2n\x62\x3\x2\x2\x2n\x64\x3\x2"+
		"\x2\x2n\x66\x3\x2\x2\x2nh\x3\x2\x2\x2ni\x3\x2\x2\x2nk\x3\x2\x2\x2nl\x3"+
		"\x2\x2\x2o\xE\x3\x2\x2\x2pq\a(\x2\x2qu\a(\x2\x2rs\a~\x2\x2su\a~\x2\x2"+
		"tp\x3\x2\x2\x2tr\x3\x2\x2\x2u\x10\x3\x2\x2\x2vw\a=\x2\x2w\x12\x3\x2\x2"+
		"\x2xy\a.\x2\x2y\x14\x3\x2\x2\x2z{\a*\x2\x2{\x16\x3\x2\x2\x2|}\a+\x2\x2"+
		"}\x18\x3\x2\x2\x2~\x7F\a]\x2\x2\x7F\x1A\x3\x2\x2\x2\x80\x81\a_\x2\x2\x81"+
		"\x1C\x3\x2\x2\x2\x82\x83\a}\x2\x2\x83\x1E\x3\x2\x2\x2\x84\x85\a\x7F\x2"+
		"\x2\x85 \x3\x2\x2\x2\x86\x87\a\x30\x2\x2\x87\"\x3\x2\x2\x2\x88\x89\a?"+
		"\x2\x2\x89$\x3\x2\x2\x2\x8A\x8B\a<\x2\x2\x8B&\x3\x2\x2\x2\x8C\x8D\av\x2"+
		"\x2\x8D\x8E\at\x2\x2\x8E\x8F\aw\x2\x2\x8F\x90\ag\x2\x2\x90(\x3\x2\x2\x2"+
		"\x91\x92\ah\x2\x2\x92\x93\a\x63\x2\x2\x93\x94\an\x2\x2\x94\x95\au\x2\x2"+
		"\x95\x96\ag\x2\x2\x96*\x3\x2\x2\x2\x97\x98\ak\x2\x2\x98\x99\ah\x2\x2\x99"+
		",\x3\x2\x2\x2\x9A\x9B\av\x2\x2\x9B\x9C\aj\x2\x2\x9C\x9D\ag\x2\x2\x9D\x9E"+
		"\ap\x2\x2\x9E.\x3\x2\x2\x2\x9F\xA0\ay\x2\x2\xA0\xA1\aj\x2\x2\xA1\xA2\a"+
		"k\x2\x2\xA2\xA3\an\x2\x2\xA3\xA4\ag\x2\x2\xA4\x30\x3\x2\x2\x2\xA5\xA6"+
		"\ah\x2\x2\xA6\xA7\aq\x2\x2\xA7\xA8\at\x2\x2\xA8\x32\x3\x2\x2\x2\xA9\xAA"+
		"\ah\x2\x2\xAA\xAB\aw\x2\x2\xAB\xAC\ap\x2\x2\xAC\xAD\a\x65\x2\x2\xAD\x34"+
		"\x3\x2\x2\x2\xAE\xAF\ao\x2\x2\xAF\xB0\a\x63\x2\x2\xB0\xB1\ak\x2\x2\xB1"+
		"\xB2\ap\x2\x2\xB2\x36\x3\x2\x2\x2\xB3\xB4\a\x66\x2\x2\xB4\xB5\aq\x2\x2"+
		"\xB5\xB6\aw\x2\x2\xB6\xB7\a\x64\x2\x2\xB7\xB8\an\x2\x2\xB8\xB9\ag\x2\x2"+
		"\xB9\x38\x3\x2\x2\x2\xBA\xBB\a\x65\x2\x2\xBB\xBC\aj\x2\x2\xBC\xBD\a\x63"+
		"\x2\x2\xBD\xBE\at\x2\x2\xBE\xBF\a\x63\x2\x2\xBF\xC0\a\x65\x2\x2\xC0\xC1"+
		"\av\x2\x2\xC1\xC2\ag\x2\x2\xC2\xC3\at\x2\x2\xC3:\x3\x2\x2\x2\xC4\xC5\a"+
		"v\x2\x2\xC5\xC6\ag\x2\x2\xC6\xC7\az\x2\x2\xC7\xC8\av\x2\x2\xC8<\x3\x2"+
		"\x2\x2\xC9\xCA\ap\x2\x2\xCA\xCB\aw\x2\x2\xCB\xCC\ao\x2\x2\xCC\xCD\a\x64"+
		"\x2\x2\xCD\xCE\ag\x2\x2\xCE\xCF\at\x2\x2\xCF>\x3\x2\x2\x2\xD0\xD1\a\x63"+
		"\x2\x2\xD1\xD2\at\x2\x2\xD2\xD3\at\x2\x2\xD3\xD4\a\x63\x2\x2\xD4\xD5\a"+
		"{\x2\x2\xD5\xD6\aq\x2\x2\xD6\xD7\ah\x2\x2\xD7@\x3\x2\x2\x2\xD8\xD9\a\x64"+
		"\x2\x2\xD9\xDA\aq\x2\x2\xDA\xDB\aq\x2\x2\xDB\xDC\an\x2\x2\xDC\xDD\ag\x2"+
		"\x2\xDD\xDE\a\x63\x2\x2\xDE\xDF\ap\x2\x2\xDF\x42\x3\x2\x2\x2\xE0\xE1\a"+
		"P\x2\x2\xE1\xE2\aQ\x2\x2\xE2\xE3\aQ\x2\x2\xE3\xE4\aV\x2\x2\xE4\xE5\a\""+
		"\x2\x2\xE5\xE6\aP\x2\x2\xE6\xE7\aQ\x2\x2\xE7\xE8\aQ\x2\x2\xE8\xE9\aV\x2"+
		"\x2\xE9\x44\x3\x2\x2\x2\xEA\xEB\at\x2\x2\xEB\xEC\ag\x2\x2\xEC\xED\ai\x2"+
		"\x2\xED\xEE\at\x2\x2\xEE\xEF\ag\x2\x2\xEF\xF0\au\x2\x2\xF0\xF1\a\x63\x2"+
		"\x2\xF1\xF2\at\x2\x2\xF2\x46\x3\x2\x2\x2\xF3\xF4\ak\x2\x2\xF4\xF5\ao\x2"+
		"\x2\xF5\xF6\ar\x2\x2\xF6\xF7\at\x2\x2\xF7\xF8\ak\x2\x2\xF8\xF9\ao\x2\x2"+
		"\xF9\xFA\ak\x2\x2\xFA\xFB\at\x2\x2\xFB\xFC\aX\x2\x2\xFC\xFD\a\x63\x2\x2"+
		"\xFD\xFE\at\x2\x2\xFEH\x3\x2\x2\x2\xFF\x100\ag\x2\x2\x100\x101\au\x2\x2"+
		"\x101\x102\a\x65\x2\x2\x102\x103\at\x2\x2\x103\x104\ak\x2\x2\x104\x105"+
		"\a\x64\x2\x2\x105\x106\ak\x2\x2\x106\x107\at\x2\x2\x107\x108\aX\x2\x2"+
		"\x108\x109\a\x63\x2\x2\x109\x10A\at\x2\x2\x10AJ\x3\x2\x2\x2\x10B\x10E"+
		"\x5\x3\x2\x2\x10C\x10E\x5\x5\x3\x2\x10D\x10B\x3\x2\x2\x2\x10D\x10C\x3"+
		"\x2\x2\x2\x10EL\x3\x2\x2\x2\x10F\x110\a$\x2\x2\x110\x111\x5K&\x2\x111"+
		"\x112\a$\x2\x2\x112N\x3\x2\x2\x2\x113\x117\x5\x3\x2\x2\x114\x117\x5\x5"+
		"\x3\x2\x115\x117\x5\a\x4\x2\x116\x113\x3\x2\x2\x2\x116\x114\x3\x2\x2\x2"+
		"\x116\x115\x3\x2\x2\x2\x117\x11A\x3\x2\x2\x2\x118\x116\x3\x2\x2\x2\x118"+
		"\x119\x3\x2\x2\x2\x119P\x3\x2\x2\x2\x11A\x118\x3\x2\x2\x2\x11B\x11F\a"+
		"$\x2\x2\x11C\x11E\v\x2\x2\x2\x11D\x11C\x3\x2\x2\x2\x11E\x121\x3\x2\x2"+
		"\x2\x11F\x120\x3\x2\x2\x2\x11F\x11D\x3\x2\x2\x2\x120\x122\x3\x2\x2\x2"+
		"\x121\x11F\x3\x2\x2\x2\x122\x123\a$\x2\x2\x123R\x3\x2\x2\x2\x124\x12B"+
		"\t\x6\x2\x2\x125\x127\a\xF\x2\x2\x126\x125\x3\x2\x2\x2\x126\x127\x3\x2"+
		"\x2\x2\x127\x128\x3\x2\x2\x2\x128\x12B\a\f\x2\x2\x129\x12B\a\xF\x2\x2"+
		"\x12A\x124\x3\x2\x2\x2\x12A\x126\x3\x2\x2\x2\x12A\x129\x3\x2\x2\x2\x12B"+
		"\x12C\x3\x2\x2\x2\x12C\x12A\x3\x2\x2\x2\x12C\x12D\x3\x2\x2\x2\x12D\x12E"+
		"\x3\x2\x2\x2\x12E\x12F\b*\x2\x2\x12FT\x3\x2\x2\x2\r\x2\\nt\x10D\x116\x118"+
		"\x11F\x126\x12A\x12C\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Skipper
