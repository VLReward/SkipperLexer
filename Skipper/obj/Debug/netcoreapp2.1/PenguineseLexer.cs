//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Rolis\Documents\GitHub\SkipperLexer\Skipper\Penguinese.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Skipper {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PenguineseLexer : Lexer {
	public const int
		NUMERAL=1, OPERATOR=2, PLUS=3, COND=4, SepCOND=5, TERM=6, COM=7, OP=8, 
		CP=9, OBR=10, CBR=11, OCB=12, CCB=13, DEC=14, EQUALS=15, COL=16, TRUE=17, 
		FALSE=18, IF=19, THEN=20, WHILE=21, FOR=22, FUNC=23, MAIN=24, DOUBLE=25, 
		CHARACTER=26, TEXT=27, NUMBER=28, ARRAYOF=29, BOOLEAN=30, HALT=31, RETURN=32, 
		READ=33, WRITE=34, LETTER=35, CHAR=36, WORD=37, STRING=38, WHITESPACE=39;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", 
		"TERM", "COM", "OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", 
		"COL", "TRUE", "FALSE", "IF", "THEN", "WHILE", "FOR", "FUNC", "MAIN", 
		"DOUBLE", "CHARACTER", "TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", "HALT", 
		"RETURN", "READ", "WRITE", "LETTER", "CHAR", "WORD", "STRING", "WHITESPACE"
	};


	public PenguineseLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'+'", null, null, "';'", "','", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "'.'", "'='", "':'", "'true'", "'false'", "'if'", 
		"'then'", "'while'", "'for'", "'func'", "'main'", "'double'", "'character'", 
		"'text'", "'number'", "'arrayof'", "'boolean'", "'NOOT NOOT'", "'regresar'", 
		"'imprimirVar'", "'escribirVar'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", "TERM", "COM", 
		"OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", "COL", "TRUE", 
		"FALSE", "IF", "THEN", "WHILE", "FOR", "FUNC", "MAIN", "DOUBLE", "CHARACTER", 
		"TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", "HALT", "RETURN", "READ", "WRITE", 
		"LETTER", "CHAR", "WORD", "STRING", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Penguinese.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2)\x12D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x6\x4[\n\x4\r\x4\xE\x4\\\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5\al\n\a\x3\b"+
		"\x3\b\x3\b\x3\b\x5\br\n\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r"+
		"\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3\""+
		"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#\x3#\x3#"+
		"\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3$\x3%\x3%\x3"+
		"%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3%\x3&\x3&\x5&\x10B\n&\x3\'\x3\'\x3"+
		"\'\x3\'\x3(\x3(\x3(\a(\x114\n(\f(\xE(\x117\v(\x3)\x3)\a)\x11B\n)\f)\xE"+
		")\x11E\v)\x3)\x3)\x3*\x3*\x5*\x124\n*\x3*\x3*\x6*\x128\n*\r*\xE*\x129"+
		"\x3*\x3*\x3\x11C\x2\x2+\x3\x2\x2\x5\x2\x2\a\x2\x3\t\x2\x4\v\x2\x5\r\x2"+
		"\x6\xF\x2\a\x11\x2\b\x13\x2\t\x15\x2\n\x17\x2\v\x19\x2\f\x1B\x2\r\x1D"+
		"\x2\xE\x1F\x2\xF!\x2\x10#\x2\x11%\x2\x12\'\x2\x13)\x2\x14+\x2\x15-\x2"+
		"\x16/\x2\x17\x31\x2\x18\x33\x2\x19\x35\x2\x1A\x37\x2\x1B\x39\x2\x1C;\x2"+
		"\x1D=\x2\x1E?\x2\x1F\x41\x2 \x43\x2!\x45\x2\"G\x2#I\x2$K\x2%M\x2&O\x2"+
		"\'Q\x2(S\x2)\x3\x2\b\x3\x2\x63|\x3\x2\x43\\\x3\x2\x32;\x5\x2,-//\x31\x31"+
		"\x4\x2>>@@\x4\x2\v\v\"\"\x139\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3"+
		"\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2"+
		"\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2"+
		"\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2"+
		"+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2"+
		"K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2"+
		"\x2\x2\x3U\x3\x2\x2\x2\x5W\x3\x2\x2\x2\aZ\x3\x2\x2\x2\t^\x3\x2\x2\x2\v"+
		"`\x3\x2\x2\x2\rk\x3\x2\x2\x2\xFq\x3\x2\x2\x2\x11s\x3\x2\x2\x2\x13u\x3"+
		"\x2\x2\x2\x15w\x3\x2\x2\x2\x17y\x3\x2\x2\x2\x19{\x3\x2\x2\x2\x1B}\x3\x2"+
		"\x2\x2\x1D\x7F\x3\x2\x2\x2\x1F\x81\x3\x2\x2\x2!\x83\x3\x2\x2\x2#\x85\x3"+
		"\x2\x2\x2%\x87\x3\x2\x2\x2\'\x89\x3\x2\x2\x2)\x8E\x3\x2\x2\x2+\x94\x3"+
		"\x2\x2\x2-\x97\x3\x2\x2\x2/\x9C\x3\x2\x2\x2\x31\xA2\x3\x2\x2\x2\x33\xA6"+
		"\x3\x2\x2\x2\x35\xAB\x3\x2\x2\x2\x37\xB0\x3\x2\x2\x2\x39\xB7\x3\x2\x2"+
		"\x2;\xC1\x3\x2\x2\x2=\xC6\x3\x2\x2\x2?\xCD\x3\x2\x2\x2\x41\xD5\x3\x2\x2"+
		"\x2\x43\xDD\x3\x2\x2\x2\x45\xE7\x3\x2\x2\x2G\xF0\x3\x2\x2\x2I\xFC\x3\x2"+
		"\x2\x2K\x10A\x3\x2\x2\x2M\x10C\x3\x2\x2\x2O\x115\x3\x2\x2\x2Q\x118\x3"+
		"\x2\x2\x2S\x127\x3\x2\x2\x2UV\t\x2\x2\x2V\x4\x3\x2\x2\x2WX\t\x3\x2\x2"+
		"X\x6\x3\x2\x2\x2Y[\t\x4\x2\x2ZY\x3\x2\x2\x2[\\\x3\x2\x2\x2\\Z\x3\x2\x2"+
		"\x2\\]\x3\x2\x2\x2]\b\x3\x2\x2\x2^_\t\x5\x2\x2_\n\x3\x2\x2\x2`\x61\a-"+
		"\x2\x2\x61\f\x3\x2\x2\x2\x62\x63\a@\x2\x2\x63l\a?\x2\x2\x64\x65\a?\x2"+
		"\x2\x65l\a?\x2\x2\x66g\a>\x2\x2gl\a?\x2\x2hl\t\x6\x2\x2ij\a#\x2\x2jl\a"+
		"?\x2\x2k\x62\x3\x2\x2\x2k\x64\x3\x2\x2\x2k\x66\x3\x2\x2\x2kh\x3\x2\x2"+
		"\x2ki\x3\x2\x2\x2l\xE\x3\x2\x2\x2mn\a(\x2\x2nr\a(\x2\x2op\a~\x2\x2pr\a"+
		"~\x2\x2qm\x3\x2\x2\x2qo\x3\x2\x2\x2r\x10\x3\x2\x2\x2st\a=\x2\x2t\x12\x3"+
		"\x2\x2\x2uv\a.\x2\x2v\x14\x3\x2\x2\x2wx\a*\x2\x2x\x16\x3\x2\x2\x2yz\a"+
		"+\x2\x2z\x18\x3\x2\x2\x2{|\a]\x2\x2|\x1A\x3\x2\x2\x2}~\a_\x2\x2~\x1C\x3"+
		"\x2\x2\x2\x7F\x80\a}\x2\x2\x80\x1E\x3\x2\x2\x2\x81\x82\a\x7F\x2\x2\x82"+
		" \x3\x2\x2\x2\x83\x84\a\x30\x2\x2\x84\"\x3\x2\x2\x2\x85\x86\a?\x2\x2\x86"+
		"$\x3\x2\x2\x2\x87\x88\a<\x2\x2\x88&\x3\x2\x2\x2\x89\x8A\av\x2\x2\x8A\x8B"+
		"\at\x2\x2\x8B\x8C\aw\x2\x2\x8C\x8D\ag\x2\x2\x8D(\x3\x2\x2\x2\x8E\x8F\a"+
		"h\x2\x2\x8F\x90\a\x63\x2\x2\x90\x91\an\x2\x2\x91\x92\au\x2\x2\x92\x93"+
		"\ag\x2\x2\x93*\x3\x2\x2\x2\x94\x95\ak\x2\x2\x95\x96\ah\x2\x2\x96,\x3\x2"+
		"\x2\x2\x97\x98\av\x2\x2\x98\x99\aj\x2\x2\x99\x9A\ag\x2\x2\x9A\x9B\ap\x2"+
		"\x2\x9B.\x3\x2\x2\x2\x9C\x9D\ay\x2\x2\x9D\x9E\aj\x2\x2\x9E\x9F\ak\x2\x2"+
		"\x9F\xA0\an\x2\x2\xA0\xA1\ag\x2\x2\xA1\x30\x3\x2\x2\x2\xA2\xA3\ah\x2\x2"+
		"\xA3\xA4\aq\x2\x2\xA4\xA5\at\x2\x2\xA5\x32\x3\x2\x2\x2\xA6\xA7\ah\x2\x2"+
		"\xA7\xA8\aw\x2\x2\xA8\xA9\ap\x2\x2\xA9\xAA\a\x65\x2\x2\xAA\x34\x3\x2\x2"+
		"\x2\xAB\xAC\ao\x2\x2\xAC\xAD\a\x63\x2\x2\xAD\xAE\ak\x2\x2\xAE\xAF\ap\x2"+
		"\x2\xAF\x36\x3\x2\x2\x2\xB0\xB1\a\x66\x2\x2\xB1\xB2\aq\x2\x2\xB2\xB3\a"+
		"w\x2\x2\xB3\xB4\a\x64\x2\x2\xB4\xB5\an\x2\x2\xB5\xB6\ag\x2\x2\xB6\x38"+
		"\x3\x2\x2\x2\xB7\xB8\a\x65\x2\x2\xB8\xB9\aj\x2\x2\xB9\xBA\a\x63\x2\x2"+
		"\xBA\xBB\at\x2\x2\xBB\xBC\a\x63\x2\x2\xBC\xBD\a\x65\x2\x2\xBD\xBE\av\x2"+
		"\x2\xBE\xBF\ag\x2\x2\xBF\xC0\at\x2\x2\xC0:\x3\x2\x2\x2\xC1\xC2\av\x2\x2"+
		"\xC2\xC3\ag\x2\x2\xC3\xC4\az\x2\x2\xC4\xC5\av\x2\x2\xC5<\x3\x2\x2\x2\xC6"+
		"\xC7\ap\x2\x2\xC7\xC8\aw\x2\x2\xC8\xC9\ao\x2\x2\xC9\xCA\a\x64\x2\x2\xCA"+
		"\xCB\ag\x2\x2\xCB\xCC\at\x2\x2\xCC>\x3\x2\x2\x2\xCD\xCE\a\x63\x2\x2\xCE"+
		"\xCF\at\x2\x2\xCF\xD0\at\x2\x2\xD0\xD1\a\x63\x2\x2\xD1\xD2\a{\x2\x2\xD2"+
		"\xD3\aq\x2\x2\xD3\xD4\ah\x2\x2\xD4@\x3\x2\x2\x2\xD5\xD6\a\x64\x2\x2\xD6"+
		"\xD7\aq\x2\x2\xD7\xD8\aq\x2\x2\xD8\xD9\an\x2\x2\xD9\xDA\ag\x2\x2\xDA\xDB"+
		"\a\x63\x2\x2\xDB\xDC\ap\x2\x2\xDC\x42\x3\x2\x2\x2\xDD\xDE\aP\x2\x2\xDE"+
		"\xDF\aQ\x2\x2\xDF\xE0\aQ\x2\x2\xE0\xE1\aV\x2\x2\xE1\xE2\a\"\x2\x2\xE2"+
		"\xE3\aP\x2\x2\xE3\xE4\aQ\x2\x2\xE4\xE5\aQ\x2\x2\xE5\xE6\aV\x2\x2\xE6\x44"+
		"\x3\x2\x2\x2\xE7\xE8\at\x2\x2\xE8\xE9\ag\x2\x2\xE9\xEA\ai\x2\x2\xEA\xEB"+
		"\at\x2\x2\xEB\xEC\ag\x2\x2\xEC\xED\au\x2\x2\xED\xEE\a\x63\x2\x2\xEE\xEF"+
		"\at\x2\x2\xEF\x46\x3\x2\x2\x2\xF0\xF1\ak\x2\x2\xF1\xF2\ao\x2\x2\xF2\xF3"+
		"\ar\x2\x2\xF3\xF4\at\x2\x2\xF4\xF5\ak\x2\x2\xF5\xF6\ao\x2\x2\xF6\xF7\a"+
		"k\x2\x2\xF7\xF8\at\x2\x2\xF8\xF9\aX\x2\x2\xF9\xFA\a\x63\x2\x2\xFA\xFB"+
		"\at\x2\x2\xFBH\x3\x2\x2\x2\xFC\xFD\ag\x2\x2\xFD\xFE\au\x2\x2\xFE\xFF\a"+
		"\x65\x2\x2\xFF\x100\at\x2\x2\x100\x101\ak\x2\x2\x101\x102\a\x64\x2\x2"+
		"\x102\x103\ak\x2\x2\x103\x104\at\x2\x2\x104\x105\aX\x2\x2\x105\x106\a"+
		"\x63\x2\x2\x106\x107\at\x2\x2\x107J\x3\x2\x2\x2\x108\x10B\x5\x3\x2\x2"+
		"\x109\x10B\x5\x5\x3\x2\x10A\x108\x3\x2\x2\x2\x10A\x109\x3\x2\x2\x2\x10B"+
		"L\x3\x2\x2\x2\x10C\x10D\a$\x2\x2\x10D\x10E\x5K&\x2\x10E\x10F\a$\x2\x2"+
		"\x10FN\x3\x2\x2\x2\x110\x114\x5\x3\x2\x2\x111\x114\x5\x5\x3\x2\x112\x114"+
		"\x5\a\x4\x2\x113\x110\x3\x2\x2\x2\x113\x111\x3\x2\x2\x2\x113\x112\x3\x2"+
		"\x2\x2\x114\x117\x3\x2\x2\x2\x115\x113\x3\x2\x2\x2\x115\x116\x3\x2\x2"+
		"\x2\x116P\x3\x2\x2\x2\x117\x115\x3\x2\x2\x2\x118\x11C\a$\x2\x2\x119\x11B"+
		"\v\x2\x2\x2\x11A\x119\x3\x2\x2\x2\x11B\x11E\x3\x2\x2\x2\x11C\x11D\x3\x2"+
		"\x2\x2\x11C\x11A\x3\x2\x2\x2\x11D\x11F\x3\x2\x2\x2\x11E\x11C\x3\x2\x2"+
		"\x2\x11F\x120\a$\x2\x2\x120R\x3\x2\x2\x2\x121\x128\t\a\x2\x2\x122\x124"+
		"\a\xF\x2\x2\x123\x122\x3\x2\x2\x2\x123\x124\x3\x2\x2\x2\x124\x125\x3\x2"+
		"\x2\x2\x125\x128\a\f\x2\x2\x126\x128\a\xF\x2\x2\x127\x121\x3\x2\x2\x2"+
		"\x127\x123\x3\x2\x2\x2\x127\x126\x3\x2\x2\x2\x128\x129\x3\x2\x2\x2\x129"+
		"\x127\x3\x2\x2\x2\x129\x12A\x3\x2\x2\x2\x12A\x12B\x3\x2\x2\x2\x12B\x12C"+
		"\b*\x2\x2\x12CT\x3\x2\x2\x2\r\x2\\kq\x10A\x113\x115\x11C\x123\x127\x129"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Skipper
