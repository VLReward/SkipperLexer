//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Rolis\Documents\GitHub\SkipperLexer\Skipper\Penguinese.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Skipper {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class PenguineseLexer : Lexer {
	public const int
		NUMERAL=1, OPERATOR=2, PLUS=3, COND=4, SepCOND=5, TERM=6, COM=7, OP=8, 
		CP=9, OBR=10, CBR=11, OCB=12, CCB=13, DEC=14, EQUALS=15, COL=16, IF=17, 
		THEN=18, WHILE=19, FOR=20, FUNC=21, MAIN=22, DOUBLE=23, CHARACTER=24, 
		TEXT=25, NUMBER=26, ARRAYOF=27, BOOLEAN=28, HALT=29, RETURN=30, READ=31, 
		WRITE=32, LETTER=33, CHAR=34, WORD=35, STRING=36, WHITESPACE=37;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", 
		"TERM", "COM", "OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", 
		"COL", "IF", "THEN", "WHILE", "FOR", "FUNC", "MAIN", "DOUBLE", "CHARACTER", 
		"TEXT", "NUMBER", "ARRAYOF", "BOOLEAN", "HALT", "RETURN", "READ", "WRITE", 
		"LETTER", "CHAR", "WORD", "STRING", "WHITESPACE"
	};


	public PenguineseLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'+'", null, null, "';'", "','", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", "'.'", "'='", "':'", "'if'", "'then'", "'while'", 
		"'for'", "'func'", "'main'", "'double'", "'character'", "'text'", "'number'", 
		"'arrayof'", "'boolean'", "'NOOT NOOT'", "'regresar'", "'imprimirVar'", 
		"'escribirVar'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NUMERAL", "OPERATOR", "PLUS", "COND", "SepCOND", "TERM", "COM", 
		"OP", "CP", "OBR", "CBR", "OCB", "CCB", "DEC", "EQUALS", "COL", "IF", 
		"THEN", "WHILE", "FOR", "FUNC", "MAIN", "DOUBLE", "CHARACTER", "TEXT", 
		"NUMBER", "ARRAYOF", "BOOLEAN", "HALT", "RETURN", "READ", "WRITE", "LETTER", 
		"CHAR", "WORD", "STRING", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Penguinese.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\x121\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x4\x6\x4W\n\x4\r\x4\xE\x4X\x3\x5\x3\x5\x3\x6\x3"+
		"\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5\ak"+
		"\n\a\x3\b\x3\b\x3\b\x3\b\x5\bq\n\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f"+
		"\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3"+
		" \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3#\x3#\x3#\x3#\x3"+
		"#\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x5$\xFF\n$\x3%\x3%\x3%\x3%\x3&\x3&\x3&\a"+
		"&\x108\n&\f&\xE&\x10B\v&\x3\'\x3\'\a\'\x10F\n\'\f\'\xE\'\x112\v\'\x3\'"+
		"\x3\'\x3(\x3(\x5(\x118\n(\x3(\x3(\x6(\x11C\n(\r(\xE(\x11D\x3(\x3(\x3\x110"+
		"\x2\x2)\x3\x2\x2\x5\x2\x2\a\x2\x3\t\x2\x4\v\x2\x5\r\x2\x6\xF\x2\a\x11"+
		"\x2\b\x13\x2\t\x15\x2\n\x17\x2\v\x19\x2\f\x1B\x2\r\x1D\x2\xE\x1F\x2\xF"+
		"!\x2\x10#\x2\x11%\x2\x12\'\x2\x13)\x2\x14+\x2\x15-\x2\x16/\x2\x17\x31"+
		"\x2\x18\x33\x2\x19\x35\x2\x1A\x37\x2\x1B\x39\x2\x1C;\x2\x1D=\x2\x1E?\x2"+
		"\x1F\x41\x2 \x43\x2!\x45\x2\"G\x2#I\x2$K\x2%M\x2&O\x2\'\x3\x2\a\x3\x2"+
		"\x63|\x3\x2\x43\\\x3\x2\x32;\x5\x2,-//\x31\x31\x4\x2\v\v\"\"\x12F\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x3Q\x3\x2\x2\x2\x5S\x3\x2\x2\x2\aV\x3\x2\x2\x2\tZ\x3\x2"+
		"\x2\x2\v\\\x3\x2\x2\x2\rj\x3\x2\x2\x2\xFp\x3\x2\x2\x2\x11r\x3\x2\x2\x2"+
		"\x13t\x3\x2\x2\x2\x15v\x3\x2\x2\x2\x17x\x3\x2\x2\x2\x19z\x3\x2\x2\x2\x1B"+
		"|\x3\x2\x2\x2\x1D~\x3\x2\x2\x2\x1F\x80\x3\x2\x2\x2!\x82\x3\x2\x2\x2#\x84"+
		"\x3\x2\x2\x2%\x86\x3\x2\x2\x2\'\x88\x3\x2\x2\x2)\x8B\x3\x2\x2\x2+\x90"+
		"\x3\x2\x2\x2-\x96\x3\x2\x2\x2/\x9A\x3\x2\x2\x2\x31\x9F\x3\x2\x2\x2\x33"+
		"\xA4\x3\x2\x2\x2\x35\xAB\x3\x2\x2\x2\x37\xB5\x3\x2\x2\x2\x39\xBA\x3\x2"+
		"\x2\x2;\xC1\x3\x2\x2\x2=\xC9\x3\x2\x2\x2?\xD1\x3\x2\x2\x2\x41\xDB\x3\x2"+
		"\x2\x2\x43\xE4\x3\x2\x2\x2\x45\xF0\x3\x2\x2\x2G\xFE\x3\x2\x2\x2I\x100"+
		"\x3\x2\x2\x2K\x109\x3\x2\x2\x2M\x10C\x3\x2\x2\x2O\x11B\x3\x2\x2\x2QR\t"+
		"\x2\x2\x2R\x4\x3\x2\x2\x2ST\t\x3\x2\x2T\x6\x3\x2\x2\x2UW\t\x4\x2\x2VU"+
		"\x3\x2\x2\x2WX\x3\x2\x2\x2XV\x3\x2\x2\x2XY\x3\x2\x2\x2Y\b\x3\x2\x2\x2"+
		"Z[\t\x5\x2\x2[\n\x3\x2\x2\x2\\]\a-\x2\x2]\f\x3\x2\x2\x2^_\a?\x2\x2_k\a"+
		"@\x2\x2`\x61\a?\x2\x2\x61k\a?\x2\x2\x62\x63\a>\x2\x2\x63k\a?\x2\x2\x64"+
		"k\a>\x2\x2\x65\x66\a@\x2\x2\x66k\a?\x2\x2gk\a@\x2\x2hi\a#\x2\x2ik\a?\x2"+
		"\x2j^\x3\x2\x2\x2j`\x3\x2\x2\x2j\x62\x3\x2\x2\x2j\x64\x3\x2\x2\x2j\x65"+
		"\x3\x2\x2\x2jg\x3\x2\x2\x2jh\x3\x2\x2\x2k\xE\x3\x2\x2\x2lm\a(\x2\x2mq"+
		"\a(\x2\x2no\a~\x2\x2oq\a~\x2\x2pl\x3\x2\x2\x2pn\x3\x2\x2\x2q\x10\x3\x2"+
		"\x2\x2rs\a=\x2\x2s\x12\x3\x2\x2\x2tu\a.\x2\x2u\x14\x3\x2\x2\x2vw\a*\x2"+
		"\x2w\x16\x3\x2\x2\x2xy\a+\x2\x2y\x18\x3\x2\x2\x2z{\a]\x2\x2{\x1A\x3\x2"+
		"\x2\x2|}\a_\x2\x2}\x1C\x3\x2\x2\x2~\x7F\a}\x2\x2\x7F\x1E\x3\x2\x2\x2\x80"+
		"\x81\a\x7F\x2\x2\x81 \x3\x2\x2\x2\x82\x83\a\x30\x2\x2\x83\"\x3\x2\x2\x2"+
		"\x84\x85\a?\x2\x2\x85$\x3\x2\x2\x2\x86\x87\a<\x2\x2\x87&\x3\x2\x2\x2\x88"+
		"\x89\ak\x2\x2\x89\x8A\ah\x2\x2\x8A(\x3\x2\x2\x2\x8B\x8C\av\x2\x2\x8C\x8D"+
		"\aj\x2\x2\x8D\x8E\ag\x2\x2\x8E\x8F\ap\x2\x2\x8F*\x3\x2\x2\x2\x90\x91\a"+
		"y\x2\x2\x91\x92\aj\x2\x2\x92\x93\ak\x2\x2\x93\x94\an\x2\x2\x94\x95\ag"+
		"\x2\x2\x95,\x3\x2\x2\x2\x96\x97\ah\x2\x2\x97\x98\aq\x2\x2\x98\x99\at\x2"+
		"\x2\x99.\x3\x2\x2\x2\x9A\x9B\ah\x2\x2\x9B\x9C\aw\x2\x2\x9C\x9D\ap\x2\x2"+
		"\x9D\x9E\a\x65\x2\x2\x9E\x30\x3\x2\x2\x2\x9F\xA0\ao\x2\x2\xA0\xA1\a\x63"+
		"\x2\x2\xA1\xA2\ak\x2\x2\xA2\xA3\ap\x2\x2\xA3\x32\x3\x2\x2\x2\xA4\xA5\a"+
		"\x66\x2\x2\xA5\xA6\aq\x2\x2\xA6\xA7\aw\x2\x2\xA7\xA8\a\x64\x2\x2\xA8\xA9"+
		"\an\x2\x2\xA9\xAA\ag\x2\x2\xAA\x34\x3\x2\x2\x2\xAB\xAC\a\x65\x2\x2\xAC"+
		"\xAD\aj\x2\x2\xAD\xAE\a\x63\x2\x2\xAE\xAF\at\x2\x2\xAF\xB0\a\x63\x2\x2"+
		"\xB0\xB1\a\x65\x2\x2\xB1\xB2\av\x2\x2\xB2\xB3\ag\x2\x2\xB3\xB4\at\x2\x2"+
		"\xB4\x36\x3\x2\x2\x2\xB5\xB6\av\x2\x2\xB6\xB7\ag\x2\x2\xB7\xB8\az\x2\x2"+
		"\xB8\xB9\av\x2\x2\xB9\x38\x3\x2\x2\x2\xBA\xBB\ap\x2\x2\xBB\xBC\aw\x2\x2"+
		"\xBC\xBD\ao\x2\x2\xBD\xBE\a\x64\x2\x2\xBE\xBF\ag\x2\x2\xBF\xC0\at\x2\x2"+
		"\xC0:\x3\x2\x2\x2\xC1\xC2\a\x63\x2\x2\xC2\xC3\at\x2\x2\xC3\xC4\at\x2\x2"+
		"\xC4\xC5\a\x63\x2\x2\xC5\xC6\a{\x2\x2\xC6\xC7\aq\x2\x2\xC7\xC8\ah\x2\x2"+
		"\xC8<\x3\x2\x2\x2\xC9\xCA\a\x64\x2\x2\xCA\xCB\aq\x2\x2\xCB\xCC\aq\x2\x2"+
		"\xCC\xCD\an\x2\x2\xCD\xCE\ag\x2\x2\xCE\xCF\a\x63\x2\x2\xCF\xD0\ap\x2\x2"+
		"\xD0>\x3\x2\x2\x2\xD1\xD2\aP\x2\x2\xD2\xD3\aQ\x2\x2\xD3\xD4\aQ\x2\x2\xD4"+
		"\xD5\aV\x2\x2\xD5\xD6\a\"\x2\x2\xD6\xD7\aP\x2\x2\xD7\xD8\aQ\x2\x2\xD8"+
		"\xD9\aQ\x2\x2\xD9\xDA\aV\x2\x2\xDA@\x3\x2\x2\x2\xDB\xDC\at\x2\x2\xDC\xDD"+
		"\ag\x2\x2\xDD\xDE\ai\x2\x2\xDE\xDF\at\x2\x2\xDF\xE0\ag\x2\x2\xE0\xE1\a"+
		"u\x2\x2\xE1\xE2\a\x63\x2\x2\xE2\xE3\at\x2\x2\xE3\x42\x3\x2\x2\x2\xE4\xE5"+
		"\ak\x2\x2\xE5\xE6\ao\x2\x2\xE6\xE7\ar\x2\x2\xE7\xE8\at\x2\x2\xE8\xE9\a"+
		"k\x2\x2\xE9\xEA\ao\x2\x2\xEA\xEB\ak\x2\x2\xEB\xEC\at\x2\x2\xEC\xED\aX"+
		"\x2\x2\xED\xEE\a\x63\x2\x2\xEE\xEF\at\x2\x2\xEF\x44\x3\x2\x2\x2\xF0\xF1"+
		"\ag\x2\x2\xF1\xF2\au\x2\x2\xF2\xF3\a\x65\x2\x2\xF3\xF4\at\x2\x2\xF4\xF5"+
		"\ak\x2\x2\xF5\xF6\a\x64\x2\x2\xF6\xF7\ak\x2\x2\xF7\xF8\at\x2\x2\xF8\xF9"+
		"\aX\x2\x2\xF9\xFA\a\x63\x2\x2\xFA\xFB\at\x2\x2\xFB\x46\x3\x2\x2\x2\xFC"+
		"\xFF\x5\x3\x2\x2\xFD\xFF\x5\x5\x3\x2\xFE\xFC\x3\x2\x2\x2\xFE\xFD\x3\x2"+
		"\x2\x2\xFFH\x3\x2\x2\x2\x100\x101\a$\x2\x2\x101\x102\x5G$\x2\x102\x103"+
		"\a$\x2\x2\x103J\x3\x2\x2\x2\x104\x108\x5\x3\x2\x2\x105\x108\x5\x5\x3\x2"+
		"\x106\x108\x5\a\x4\x2\x107\x104\x3\x2\x2\x2\x107\x105\x3\x2\x2\x2\x107"+
		"\x106\x3\x2\x2\x2\x108\x10B\x3\x2\x2\x2\x109\x107\x3\x2\x2\x2\x109\x10A"+
		"\x3\x2\x2\x2\x10AL\x3\x2\x2\x2\x10B\x109\x3\x2\x2\x2\x10C\x110\a$\x2\x2"+
		"\x10D\x10F\v\x2\x2\x2\x10E\x10D\x3\x2\x2\x2\x10F\x112\x3\x2\x2\x2\x110"+
		"\x111\x3\x2\x2\x2\x110\x10E\x3\x2\x2\x2\x111\x113\x3\x2\x2\x2\x112\x110"+
		"\x3\x2\x2\x2\x113\x114\a$\x2\x2\x114N\x3\x2\x2\x2\x115\x11C\t\x6\x2\x2"+
		"\x116\x118\a\xF\x2\x2\x117\x116\x3\x2\x2\x2\x117\x118\x3\x2\x2\x2\x118"+
		"\x119\x3\x2\x2\x2\x119\x11C\a\f\x2\x2\x11A\x11C\a\xF\x2\x2\x11B\x115\x3"+
		"\x2\x2\x2\x11B\x117\x3\x2\x2\x2\x11B\x11A\x3\x2\x2\x2\x11C\x11D\x3\x2"+
		"\x2\x2\x11D\x11B\x3\x2\x2\x2\x11D\x11E\x3\x2\x2\x2\x11E\x11F\x3\x2\x2"+
		"\x2\x11F\x120\b(\x2\x2\x120P\x3\x2\x2\x2\r\x2Xjp\xFE\x107\x109\x110\x117"+
		"\x11B\x11D\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Skipper
